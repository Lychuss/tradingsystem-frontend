
C:\tradingsystem-frontend\my-app>(if not "C:\tradingsystem-frontend\my-app\src\app\layout.jsx" == "%~dp0node_modules\*" (
echo ----- FILE: C:\tradingsystem-frontend\my-app\src\app\layout.jsx -----  
 type "C:\tradingsystem-frontend\my-app\src\app\layout.jsx" 
) ) 
----- FILE: C:\tradingsystem-frontend\my-app\src\app\layout.jsx -----
import Link from "next/link";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { FaShoppingCart } from "react-icons/fa";
import { CgProfile } from "react-icons/cg";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <header className="flex items-center justify-between px-6 py-3 font-mono my-10">
          <div className="mx-10 flex items-center gap-4">
            <h1 className="font-bold">FILTERS:</h1>
            <select className="text-4 border rounded-lg border-white py-1 px-5">
              <option value="" className="bg-black">SELECT</option>
              <option value="Trade" className="bg-black">TRADE</option>
              <option value="Buy" className="bg-black">BUY</option>
            </select>
          </div>
          <div className="p-1 rounded-lg font-mono absolute left-1/2 transform -translate-x-1/2 flex items-center space-x-20 border font-bold">
            <Link href="/" className="text-2xl cursor-pointer" >YES4TRADE</Link>
            <div className="font-mono flex items-center space-x-8 font-bold">
              <p>Books</p>
              <p>Notes</p>
              <p>Uniforms</p>
            </div>
            <Link href="/trade-product" className="border bg-green-300 rounded-lg py-1 px-2 text-black cursor-pointer">Let's Trade</Link>
          </div>
          <div className="justify-between space-x-55
          ">
            <FaShoppingCart className="inline-block border rounded-sm text-black w-10 h-10 p-2 bg-white"/>
            <CgProfile className="inline-block rounded-sm text-white w-13 h-13 p-2"/>
          </div>
        </header>
        <main>
        {children}
        </main>
      </body>
    </html>
  );
}

C:\tradingsystem-frontend\my-app>(if not "C:\tradingsystem-frontend\my-app\src\app\page.jsx" == "%~dp0node_modules\*" (
echo ----- FILE: C:\tradingsystem-frontend\my-app\src\app\page.jsx -----  
 type "C:\tradingsystem-frontend\my-app\src\app\page.jsx" 
) ) 
----- FILE: C:\tradingsystem-frontend\my-app\src\app\page.jsx -----
import Books from './components/Home.jsx';

export default function Home(){
  return (
    <>
      <Books />
    </>
  );
}

C:\tradingsystem-frontend\my-app>(if not "C:\tradingsystem-frontend\my-app\src\app\components\Button.jsx" == "%~dp0node_modules\*" (
echo ----- FILE: C:\tradingsystem-frontend\my-app\src\app\components\Button.jsx -----  
 type "C:\tradingsystem-frontend\my-app\src\app\components\Button.jsx" 
) ) 
----- FILE: C:\tradingsystem-frontend\my-app\src\app\components\Button.jsx -----
import Link from "next/link";

export default function Button(props){
    return  <Link href="/">
            <button onClick={props.onClick} type="submit" className="font-mono absolute right-150 top-185 
                    cursor-pointer font-bold mx-auto block border rounded-lg px-7 py-2 text-3xl">Post
            </button>
            </Link>
}
C:\tradingsystem-frontend\my-app>(if not "C:\tradingsystem-frontend\my-app\src\app\components\Home.jsx" == "%~dp0node_modules\*" (
echo ----- FILE: C:\tradingsystem-frontend\my-app\src\app\components\Home.jsx -----  
 type "C:\tradingsystem-frontend\my-app\src\app\components\Home.jsx" 
) ) 
----- FILE: C:\tradingsystem-frontend\my-app\src\app\components\Home.jsx -----
"use client";

import { useState, useEffect } from "react";

export default function Books(){
    const [items, setItems] = useState([]);

    const methods = (method, type1, type2) => {
        if(method === 2) return <p>Price: â‚±{type2}</p>;
        return <p>Requirements: {type1}</p>
    }

    useEffect(() => {
        fetch(`${process.env.NEXT_PUBLIC_API_URL}/yes4trade/getbooks`)
        .then((res) => {
            if (!res.ok) {
            throw new Error("Error! Cannot get books");
            }
            return res.json();
        })
        .then((json) => {
            console.log("Fetched:", json);
            setItems(json);
        })
        .catch((err) => {
            console.log(err);
        });
    }, []);

     return (
        <>
          <div className="inline-block flex px-12">
                {items.map((item) => 
                (<section className="inline-block flex space-x-10 p-2 m-6" key={item.product_id}>
                    <div>
                        <img className="w-60 h-60 rounded-3xl" src={item.url} alt={item.title}></img>
                          <div className="font-mono m-2">
                            <h1 className="font-bold ">{item.title}</h1>
                            {methods(item.methods, item.requirements, item.price)}
                            <button className="font-bold mx-auto block border 
                            border-black rounded-lg px-4 py-2 my-2 bg-green-700 cursor-pointer">Trade</button>
                          </div>
                    </div>
                </section>))}
          </div>  
        </>
    );
}
C:\tradingsystem-frontend\my-app>(if not "C:\tradingsystem-frontend\my-app\src\app\components\Input.jsx" == "%~dp0node_modules\*" (
echo ----- FILE: C:\tradingsystem-frontend\my-app\src\app\components\Input.jsx -----  
 type "C:\tradingsystem-frontend\my-app\src\app\components\Input.jsx" 
) ) 
----- FILE: C:\tradingsystem-frontend\my-app\src\app\components\Input.jsx -----
export default function Input(props){
    return <div className="m-15 px-10 rounded-lg font-mono">
                <h1 className="text-3xl mb-4 font-bold">{props.label}</h1>
                <input onChange={props.onChange} className={props.className}
                    type={props.type} placeholder={props.placeholder} required></input>
            </div>
}
C:\tradingsystem-frontend\my-app>(if not "C:\tradingsystem-frontend\my-app\src\app\components\Select.jsx" == "%~dp0node_modules\*" (
echo ----- FILE: C:\tradingsystem-frontend\my-app\src\app\components\Select.jsx -----  
 type "C:\tradingsystem-frontend\my-app\src\app\components\Select.jsx" 
) ) 
----- FILE: C:\tradingsystem-frontend\my-app\src\app\components\Select.jsx -----
export function SelectProduct(props){
return <div className="m-15 px-10 rounded-lg font-mono">
            <label htmlFor="type" className="sr-only">Type of Products</label>
                <h1 className="text-3xl mb-4 font-bold">Type of the Product: </h1>
                <select id="type" onChange={props.onChange} className="outline-none border-0 border-b w-100 border-white-500 rounded-sm bg-gray-600"
                    placeholder='Enter your student id' required>
                    <option value="" disabled selected>Select product type</option>
                    <option value="Notes">Notes</option>
                    <option value="Books">Books</option>
                    <option value="Uniform">Uniform</option>
                </select>
        </div>
}

export function SelectMethod(props){
    return  <div className="m-15 px-10 rounded-lg font-mono">
                <label htmlFor="method" className="sr-only">Methods</label>
                <h1 className="text-3xl mb-4 font-bold">Method: </h1>
                <select id="method" onChange={props.onChange} className="outline-none border-0 border-b w-100 border-white-500 rounded-sm bg-gray-600"
                    placeholder='Enter your student id' required>
                    <option value="" disabled selected>Select desire method</option>
                    <option value="Sell">Sell</option>
                    <option value="Trade">Trade</option>
                </select>
            </div>
}

export function SelectCollege(props){
    return  <div className="m-15 px-10 rounded-lg font-mono">
                <label htmlFor="program" className="sr-only">Programs</label>
                <h1 className="text-3xl mb-4 font-bold">Program: </h1>
                <select id="program" onChange={props.onChange} className="outline-none border-0 border-b w-100 border-white-500 rounded-sm bg-gray-600"
                    placeholder='Enter your student id' required>
                    <option value="" disabled selected>Select your program</option>
                    <option value="CEN">Engineering</option>
                    <option value="CAS">Arts and Sciences</option>
                    <option value="CAG">Agriculture</option>
                    <option value="CIT">Industrial Technology</option>
                    <option value="CTE">Teacher Education</option>
                    <option value="CABHA">Administration, Business, Hospitality and Accountancy</option>
                    <option value="CAM">Allied Medicine</option>
                </select>
            </div>
    }
C:\tradingsystem-frontend\my-app>(if not "C:\tradingsystem-frontend\my-app\src\app\trade-product\page.jsx" == "%~dp0node_modules\*" (
echo ----- FILE: C:\tradingsystem-frontend\my-app\src\app\trade-product\page.jsx -----  
 type "C:\tradingsystem-frontend\my-app\src\app\trade-product\page.jsx" 
) ) 
----- FILE: C:\tradingsystem-frontend\my-app\src\app\trade-product\page.jsx -----
"use client";
import { useState, useEffect } from "react";
import Input from "../components/Input.jsx";
import Link from "next/link";
import Button from "../components/Button.jsx";
import { SelectProduct, SelectMethod, SelectCollege } from "../components/Select.jsx";


export default function Trade(){
    const [email, setEmail] = useState("");
    const [studentId, setStudentId] = useState("");
    const [program, setProgram] = useState("");
    const [type, setType] = useState("");
    const [method, setMethod] = useState("");
    const [productName, setProductName] = useState("");
    const [requirement, setRequirement] = useState("");
    const [price, setPrice] = useState("");
    const [picture, setPicture] = useState(null);

    const [option, setOption] = useState(<><h1 className="text-3xl mb-4 font-bold">
                                            Desire Trade
                                         </h1>
                                         <input onChange={(e) => setRequirement(e.target.value)} className=" outline-none border-0 border-b w-100 border-white-500 rounded-sm"
                                            placeholder='Enter your trade requirements' required></input></>);
    const handleMethodChange = (e) => {
        setMethod(e.target.value);
        methods(e.target.value, setOption, setPrice, setRequirement);
    }

    const handlePost = () => {
        const formData = new FormData();
            formData.append("image", picture); 
            formData.append("title", productName);
            formData.append("methods", method);
            formData.append("email", email);
            formData.append("studentId", studentId);
            formData.append("program", program);
            formData.append("type", type);

            console.log(method);

            if(method === 'Trade') {
                console.log(picture);
                formData.append("requirement", requirement);

                fetch(`${process.env.NEXT_PUBLIC_API_URL}/yes4trade/upload-trade`, {
                    method: 'POST',
                    body: formData
                })
                .then(res => {
                    if(!res.ok){
                        throw new Error('Error! Cannot fetch due to errors')
                    }
                    return res.json();
                })
                .then(json => {
                    console.log("Fetched: ", json);
                })
                .catch(err => {
                    console.error(err);
                });
          } else {
                
                formData.append("price", price);

                fetch(`${process.env.NEXT_PUBLIC_API_URL}/yes4trade/upload-sell`, {
                    method: 'POST',
                    body: formData
                })
                .then(res => {
                    console.log(res.status);
                    if(!res.ok){
                        throw new Error('Error! Cannot fetch due to errors')
                    }
                    return res.json();
                })
                .then(json => {
                    console.log('Fetched: ', json);
                })
                .catch(err => {
                    console.error(err);
                });
            }
                
    }
    
    return (
        <>
            <main className="grid grid-cols-2 gap-1 m-10">
                <section>
                    <Input type="email" className="outline-none border-0 border-b w-100 border-white-500 rounded-sm" onChange={(e) => setEmail(e.target.value)} label="Email: " placeholder="Enter your email" />
                    <Input type="text" className="outline-none border-0 border-b w-100 border-white-500 rounded-sm" onChange={(e) => setStudentId(e.target.value)} label="Student ID: " placeholder="Enter your Student ID"/>
                    <Input type="text" className="outline-none border-0 border-b w-100 border-white-500 rounded-sm" onChange={(e) => setProductName(e.target.value)} label="Product Name" placeholder="Enter the product name" />
                    <SelectProduct onChange={(e) => setType(e.target.value)}/>
                </section>
                <section>
                    <SelectMethod onChange={handleMethodChange}/>
                    <div className="m-15 px-10 rounded-lg font-mono">
                                {option}
                    </div>
                    <SelectCollege onChange={(e) => setProgram(e.target.value)} />
                    <Input type="file" label="Upload Picture: " onChange={(e) => setPicture(e.target.files[0])} className="file:mr-4 bg-gray-600
                        cursor-pointer file:hidden outline-none border-0 border-b w-100 border-white-500 rounded-sm" />
                </section>
            </main>
                <div>
                    <Button onClick={handlePost}/>
                </div>
        </>
    );
}


function methods(value, setOption, setPrice, setRequirement){
    if(value === "Trade"){
        return setOption(<><h1 className="text-3xl mb-4 font-bold">
                                        Desire Trade
                                        </h1>
                                        <input onChange={(e) => setRequirement(e.target.value)} className=" outline-none border-0 border-b w-100 border-white-500 rounded-sm"
                                        placeholder='Enter your trade requirements' required></input></>);
    } else if(value === "Sell"){
        return setOption(<><h1 className="text-3xl mb-4 font-bold">
                        Price
                        </h1>
                        <input onChange={(e) => setPrice(e.target.value)} className="outline-none border-0 border-b w-100 border-white-500 rounded-sm"
                        placeholder='Enter your price rate â‚±' required></input></>);
    }
}
